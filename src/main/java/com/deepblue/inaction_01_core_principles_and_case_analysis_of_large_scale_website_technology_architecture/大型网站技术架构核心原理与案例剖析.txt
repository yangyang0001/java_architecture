---------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------ 第1章 大型网站架构演化 ------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------
1.1 大型网站软件系统的特点

    高并发大流量
    高可用
    海量数据的存储
    用户分布广泛, 网络情况复杂
    安全环境恶劣
    需求变更快, 发布频繁
    渐进式发展

1.1 大型网站架构演化发展历程

---------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------ 第2章 大型网站架构模式 ------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------
分层
分割
分布式
集群
缓存:
    缓存是改善软件性能的第一手段!
    使用缓存的两个约束:
    1、数据访问热点的不均衡, 即不同数据的访问频次不一致!
    2、高频次访问数据可能会失效, 这时必须要进行定期失效否则产生脏读!

异步
冗余
自动化:
    目前自动化方面主要集中在发布运维方面!

安全


---------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------ 第3章 大型网站核心架构要素 ---------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------
高并发:
    衡量指标是服务在压力峰值下是否能够良好的运行!

高可用:
    衡量指标是任何一台服务器或者几台服务器宕掉后, 服务或者应用是否能够持续提供相应的服务!

伸缩性:
    应用服务集群: 是否可以更快的添加/减少服务器来提供应用!
    缓存服务集群: 扩容和缩容时 是否会造成 缓存键的路由算法失效, 从而造成缓存数据不可用的状况!
    关系型数据服务集群: 这种伸缩性比较差, 虽然支持数据的复制和热备份, 但是要实现扩容或者缩容必须借助外部!

扩展性:
    扩展性的衡量指标是 当业务多的时候对原始业务是否能够平滑过渡!

安全性:
    安全性的衡量指标是 经受网络攻击后网站的核心数据不会丢失甚至宕机!


---------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------ 第4章 瞬时响应: 网站的高性能架构 ---------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------
响应时间

并发数量
    系统用户数 >> 在线用户数 >> 并发用户数

吞吐量
    TPS 每秒事务数
    HPS 每秒 HTTP 请求数
    QPS 每秒查询数

性能计数器
    top 指令 System Load 即系统负载: Load 参数 前三个表示 最近1分钟 10分钟 15分总 之内的 运行队列平均进程数!

性能优化策略
    web前端性能优化
        浏览器端的优化
            减少http请求
            使用浏览器缓存
            压缩静态文件
            减少cookie传输

        使用CDN加速 缓存一些静态 html css javascript images 等文件

        使用反向代理服务器 缓存静态文件 以及 某些热点动态文件(内部和服务器之间保持数据的动态更新)

    应用服务器 优化
        网站新能优化的第一定理: 优先考虑使用缓存! 使用缓存的前提一般是 读取使用次数 : 修改次数 = 2 : 1

        分布式缓存的两种分布式集群: JBoss Cache 集群 是节点之间相互通信; Memcached 集群 是节点之间不相互通信, Memcached 集群是不适合进行扩容和缩容的, 非常危险!

        异步解耦合提高并发量! 加入消息队列的使用!

    存储服务器 优化
        这个了解

---------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------ 第5章 万无一失: 网站的高可用架构 ---------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------
高可用的衡量指标 和 故障等级划分!

大型网站架构分为三层: 初始手段也对应三层进行!




---------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------ 第6章 永无止境: 网站的伸缩性架构 ---------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------












